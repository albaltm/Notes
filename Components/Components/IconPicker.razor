@using AppNotes.Components.Pages
@inherits Global

<style>
    .rz-dropdown{
        width: 2.4em;
    }

    .rz-dropdown-label{
        padding:0;
    }

    .rz-dropdown-trigger{
        display:none;
    }

    .rz-dropdown-item {
        display: inline-block;
        position: relative;
    }

    .rz-dropdown-items li:defined {
        background-color: inherit;
    }

    .rz-dropdown-items li:defined:hover {
        background-color: inherit;
    }

    .rz-dropdown-panel {
        background-color: inherit;
        box-shadow: none;
    }

    .rz-dropdown-items-wrapper {
        background-color: inherit;
        width: 60vw;
        max-width: 10em;
        padding: 0 0.8em;
        text-align: justify;
        box-shadow: 1px 1px 6px #515151;
        max-height: 10em;
    }
</style>

<RadzenDropDown @bind-Value=@Icon Data=@CustomIcons Style="background-color:transparent; height:2.2em;" class="py-1 px-2">
    <Template>
        <MudIcon @onclick="@(() => SelectIcon(context as string))" Icon="@((context as string))" Size="Size.Medium" Color="Color.Default" Class="position-absolute top-0 start-0 p-1" style="background-color: rgba(54, 54, 54, 0.1); border-radius:50%;" />
    </Template>
    <ValueTemplate>
        <MudIcon Icon="@Icon" Size="Size.Small" Color="Color.Default" />
    </ValueTemplate>
</RadzenDropDown>


@code {
    [Parameter]
    public string Icon { get; set; }
    [Parameter]
    public EventCallback<string> IconChanged { get; set; }

    public async void SelectIcon(string icono)
    {
        Icon = icono;
        await IconChanged.InvokeAsync(Icon);
    }
}
